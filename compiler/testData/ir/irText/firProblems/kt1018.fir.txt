FILE fqName:<root> fileName:/kt1018.kt
  CLASS CLASS name:StockMarketTableModel modality:FINAL visibility:public superTypes:[kotlin.Any]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.StockMarketTableModel
    CONSTRUCTOR visibility:public <> () returnType:<root>.StockMarketTableModel [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:StockMarketTableModel modality:FINAL visibility:public superTypes:[kotlin.Any]'
    FUN name:getColumnCount visibility:public modality:FINAL <> ($this:<root>.StockMarketTableModel) returnType:kotlin.Int
      $this: VALUE_PARAMETER name:<this> type:<root>.StockMarketTableModel
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun getColumnCount (): kotlin.Int declared in <root>.StockMarketTableModel'
          CALL 'public final fun CHECK_NOT_NULL <T0> (arg0: T0 of kotlin.internal.ir.CHECK_NOT_NULL?): T0 of kotlin.internal.ir.CHECK_NOT_NULL declared in kotlin.internal.ir' type=kotlin.Int origin=EXCLEXCL
            <T0>: kotlin.Int
            arg0: BLOCK type=kotlin.Int origin=SAFE_CALL
              VAR IR_TEMPORARY_VARIABLE name:tmp_0 type:kotlin.Array<kotlin.Int?> [val]
                CALL 'private final fun <get-COLUMN_TITLES> (): kotlin.Array<kotlin.Int?> declared in <root>.StockMarketTableModel.Companion' type=kotlin.Array<kotlin.Int?> origin=GET_PROPERTY
                  $this: GET_OBJECT 'CLASS OBJECT name:Companion modality:FINAL visibility:public [companion] superTypes:[kotlin.Any]' type=<root>.StockMarketTableModel.Companion
              WHEN type=kotlin.Int origin=null
                BRANCH
                  if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                    arg0: GET_VAR 'val tmp_0: kotlin.Array<kotlin.Int?> [val] declared in <root>.StockMarketTableModel.getColumnCount' type=kotlin.Array<kotlin.Int?> origin=null
                    arg1: CONST Null type=kotlin.Nothing? value=null
                  then: CONST Null type=kotlin.Nothing? value=null
                BRANCH
                  if: CONST Boolean type=kotlin.Boolean value=true
                  then: CALL 'public final fun <get-size> (): kotlin.Int declared in kotlin.Array' type=kotlin.Int origin=GET_PROPERTY
                    $this: GET_VAR 'val tmp_0: kotlin.Array<kotlin.Int?> [val] declared in <root>.StockMarketTableModel.getColumnCount' type=kotlin.Array<kotlin.Int?> origin=null
    CLASS OBJECT name:Companion modality:FINAL visibility:public [companion] superTypes:[kotlin.Any]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.StockMarketTableModel.Companion
      CONSTRUCTOR visibility:private <> () returnType:<root>.StockMarketTableModel.Companion [primary]
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in kotlin.Any'
          INSTANCE_INITIALIZER_CALL classDescriptor='CLASS OBJECT name:Companion modality:FINAL visibility:public [companion] superTypes:[kotlin.Any]'
      PROPERTY name:COLUMN_TITLES visibility:private modality:FINAL [val]
        FIELD PROPERTY_BACKING_FIELD name:COLUMN_TITLES type:kotlin.Array<kotlin.Int?> visibility:private [final]
          EXPRESSION_BODY
            CALL 'public final fun arrayOfNulls <T> (size: kotlin.Int): kotlin.Array<T of kotlin.arrayOfNulls?> declared in kotlin' type=kotlin.Array<kotlin.Int?> origin=null
              <T>: kotlin.Int
              size: CONST Int type=kotlin.Int value=10
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-COLUMN_TITLES> visibility:private modality:FINAL <> ($this:<root>.StockMarketTableModel.Companion) returnType:kotlin.Array<kotlin.Int?>
          correspondingProperty: PROPERTY name:COLUMN_TITLES visibility:private modality:FINAL [val]
          $this: VALUE_PARAMETER name:<this> type:<root>.StockMarketTableModel.Companion
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='private final fun <get-COLUMN_TITLES> (): kotlin.Array<kotlin.Int?> declared in <root>.StockMarketTableModel.Companion'
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:COLUMN_TITLES type:kotlin.Array<kotlin.Int?> visibility:private [final]' type=kotlin.Array<kotlin.Int?> origin=null
                receiver: GET_VAR '<this>: <root>.StockMarketTableModel.Companion declared in <root>.StockMarketTableModel.Companion.<get-COLUMN_TITLES>' type=<root>.StockMarketTableModel.Companion origin=null
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean [operator] declared in kotlin.Any
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        VALUE_PARAMETER name:other index:0 type:kotlin.Any?
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
        overridden:
          public open fun hashCode (): kotlin.Int declared in kotlin.Any
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
        overridden:
          public open fun toString (): kotlin.String declared in kotlin.Any
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean [operator] declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  FUN name:box visibility:public modality:FINAL <> () returnType:kotlin.String
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun box (): kotlin.String declared in <root>'
        WHEN type=kotlin.String origin=IF
          BRANCH
            if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
              arg0: CALL 'public final fun getColumnCount (): kotlin.Int declared in <root>.StockMarketTableModel' type=kotlin.Int origin=null
                $this: CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in <root>.StockMarketTableModel' type=<root>.StockMarketTableModel origin=null
              arg1: CONST Int type=kotlin.Int value=10
            then: CONST String type=kotlin.String value="OK"
          BRANCH
            if: CONST Boolean type=kotlin.Boolean value=true
            then: CONST String type=kotlin.String value="fail"
